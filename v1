using UnityEngine;
using TMPro;

public class Mojiparticles : MonoBehaviour
{
    public ParticleSystem particleSystem;  // パーティクルシステム
    public TMP_Text inputText;             // インスペクターで指定するテキスト
    public float particleLifetime = 1.0f;  // パーティクルの生存時間
    public float particleSize = 1.0f;      // パーティクルのサイズ
    public Material particleMaterial;      // 使用するパーティクル用のマテリアル

    private ParticleSystem.Particle[] particles;

    void Start()
    {
        // パーティクルシステムの初期設定
        particles = new ParticleSystem.Particle[inputText.text.Length];
        particleSystem.Emit(inputText.text.Length); // パーティクルを文字数分発生

        // パーティクルシステムのレンダラーにマテリアルを設定
        var particleRenderer = particleSystem.GetComponent<ParticleSystemRenderer>();
        if (particleRenderer != null)
        {
            particleRenderer.material = particleMaterial; // すべてのパーティクルに同じマテリアルを適用
        }

        // 各文字に対応するパーティクルの設定
        UpdateParticleText();
    }

    void Update()
    {
        // 毎フレームテキストのパーティクルを更新
        UpdateParticleText();
    }

    private void UpdateParticleText()
    {
        // テキストを一文字ずつパーティクルに対応させる
        for (int i = 0; i < inputText.text.Length; i++)
        {
            ParticleSystem.Particle particle = particles[i];

            // パーティクルの位置を設定 (X方向に文字間隔を設定)
            particle.position = new Vector3(i * 2.0f, 0, 0);
            particle.startLifetime = particleLifetime;
            particle.startSize = particleSize;
            particle.startColor = Color.white;

            // パーティクルシステムに更新を反映
            particles[i] = particle;
        }

        particleSystem.SetParticles(particles, particles.Length); // 更新したパーティクルを設定
    }

    // 文字をRenderTextureに描画してテクスチャを取得
    private Texture2D GetParticleTexture(string character)
    {
        GameObject tmpGO = new GameObject("TMPText", typeof(TextMeshProUGUI));
        TextMeshProUGUI tmpText = tmpGO.GetComponent<TextMeshProUGUI>();
        tmpText.text = character;
        tmpText.font = inputText.font;
        tmpText.fontSize = 100;
        
        // CanvasとRenderTextureの設定
        Canvas canvas = tmpGO.AddComponent<Canvas>();
        canvas.renderMode = RenderMode.WorldSpace;

        RenderTexture renderTexture = new RenderTexture(256, 256, 24);
        RenderTexture.active = renderTexture;

        // テキストを描画
        tmpText.ForceMeshUpdate();
        tmpText.canvas.Render();

        Texture2D texture = new Texture2D(256, 256);
        texture.ReadPixels(new Rect(0, 0, 256, 256), 0, 0);
        texture.Apply();

        return texture;
    }
}
